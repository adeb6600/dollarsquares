# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.102.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."


  end

  desc "Runs all the tests"
  lane :test do
    scan
  end
lane :refresh_dsyms do
  download_dsyms                  # Download dSYM files from iTC
  upload_symbols_to_crashlytics   # Upload them to Crashlytics
  clean_build_artifacts           # Delete the local dSYM files
end
  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do

    match(type: "appstore") # more information: https://codesigning.guide
    increment_build_number(
      xcodeproj: './ios/dollarsquares.xcodeproj'
    )
    gym(scheme: "dollarsquares") # Build your app - more options available
   
    commit_version_bump(
    message: "Deployed new build #{lane_context[SharedValues::BUILD_NUMBER]}",
    xcodeproj: './ios/dollarsquares.xcodeproj'
  )
    hockey(
  api_token: "27e6d0765d5446689e9c38b68f9a3349",
  ipa: "./dollarsquares.ipa",
  notes: "Changelog"
)

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
     match(type: "appstore")
     snapshot
     gym(scheme: "dollarsquares") # Build your app - more options available
     deliver(force: true)
     frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
platform :android do
  desc "Deploy a new version to the Google Play Store"
  lane :alpha do
    gradle(
      task: "clean",
      project_dir: "android/"
    )
    gradle(
      task: "assemble",
      build_type: "Release",
      project_dir: "android/"
    )
    supply(
      track: "alpha",
      apk: "#{lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]}"
    )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
